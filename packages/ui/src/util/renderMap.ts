import { IconRenderProps } from '@content/icon/Icon.props.ts'
import { iframeRenderProps } from '@content/iframe/Iframe.props.ts'
import {
  Icon,
  Iframe,
  ListItem,
  OrderedList,
  UnorderedList,
} from '@content/index.ts'
import { listItemRenderProps } from '@content/list/listItem/ListItem.props.ts'
import { orderedListRenderProps } from '@content/list/orderedList/OrderedList.props.ts'
import { unorderedListRenderProps } from '@content/list/unorderedList/UnorderedList.props.ts'
import { buttonRenderProps } from '@form/button/Button.props.ts'
import { Button, TextInput } from '@form/index.ts'
import { textInputRenderProps } from '@form/textInput/TextInput.props.ts'
import { Section } from '@layout/index.ts'
import { sectionRenderProps } from '@layout/section/Section.props.ts'
import { Tooltip } from '@overlay/index.ts'
import { tooltipRenderProps } from '@overlay/tooltip/Tooltip.props.ts'
import {
  a,
  abbr,
  address,
  area,
  article,
  aside,
  audio,
  b,
  base,
  bdi,
  bdo,
  blockquote,
  body,
  br,
  button,
  canvas,
  caption,
  Children,
  cite,
  code,
  col,
  colgroup,
  data,
  datalist,
  dd,
  del,
  details,
  dfn,
  dialog,
  div,
  dl,
  dt,
  em,
  embed,
  fieldset,
  figcaption,
  figure,
  footer,
  form,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  head,
  header,
  hgroup,
  hr,
  html,
  i,
  iframe,
  img,
  input,
  ins,
  kbd,
  label,
  legend,
  li,
  link,
  main,
  map,
  mark,
  menu,
  meta,
  meter,
  nav,
  noscript,
  object,
  ol,
  optgroup,
  option,
  output,
  p,
  picture,
  pre,
  progress,
  q,
  rp,
  rt,
  ruby,
  s,
  samp,
  script,
  search,
  section,
  select,
  slot,
  small,
  source,
  span,
  strong,
  style,
  sub,
  summary,
  sup,
  svg,
  table,
  tbody,
  td,
  template,
  text,
  textarea,
  tfoot,
  th,
  thead,
  time,
  title,
  tr,
  track,
  u,
  ul,
  video,
  wbr,
} from '@rvjs/core/dom'
import { RefObject } from '@rvjs/core/reactive'
import { codeSnippetRenderProps } from '@typography/codeSnippet/CodeSnippet.props.ts'
import { highlightRenderProps } from '@typography/highlight/Highlight.props.ts'
import { CodeSnippet, Highlight, Link, Text } from '@typography/index.ts'
import { linkRenderProps } from '@typography/link/Link.props.ts'
import { textRenderProps } from '@typography/text/Text.props.ts'

export const componentFnMap = {
  Icon: Icon,
  Iframe: Iframe,
  OrderedList: OrderedList,
  UnorderedList: UnorderedList,
  ListItem: ListItem,
  Button: Button,
  TextInput: TextInput,
  Section: Section,
  Tooltip: Tooltip,
  CodeSnippet: CodeSnippet,
  Highlight: Highlight,
  Link: Link,
  Text: Text,
}

export const componentRenderPropsMap = {
  Icon: IconRenderProps,
  Iframe: iframeRenderProps,
  OrderedList: orderedListRenderProps,
  UnorderedList: unorderedListRenderProps,
  ListItem: listItemRenderProps,
  Button: buttonRenderProps,
  TextInput: textInputRenderProps,
  Section: sectionRenderProps,
  Tooltip: tooltipRenderProps,
  CodeSnippet: codeSnippetRenderProps,
  Highlight: highlightRenderProps,
  Link: linkRenderProps,
  Text: textRenderProps,
}

export const elementFnMap = {
  a: a,
  abbr: abbr,
  address: address,
  area: area,
  article: article,
  aside: aside,
  audio: audio,
  b: b,
  base: base,
  bdi: bdi,
  bdo: bdo,
  blockquote: blockquote,
  body: body,
  br: br,
  button: button,
  canvas: canvas,
  caption: caption,
  cite: cite,
  code: code,
  col: col,
  colgroup: colgroup,
  data: data,
  datalist: datalist,
  dd: dd,
  del: del,
  details: details,
  dfn: dfn,
  dialog: dialog,
  div: div,
  dl: dl,
  dt: dt,
  em: em,
  embed: embed,
  fieldset: fieldset,
  figcaption: figcaption,
  figure: figure,
  footer: footer,
  form: form,
  h1: h1,
  h2: h2,
  h3: h3,
  h4: h4,
  h5: h5,
  h6: h6,
  head: head,
  header: header,
  hgroup: hgroup,
  hr: hr,
  html: html,
  i: i,
  iframe: iframe,
  img: img,
  input: input,
  ins: ins,
  kbd: kbd,
  label: label,
  legend: legend,
  li: li,
  link: link,
  main: main,
  map: map,
  mark: mark,
  menu: menu,
  meta: meta,
  meter: meter,
  nav: nav,
  noscript: noscript,
  object: object,
  ol: ol,
  optgroup: optgroup,
  option: option,
  output: output,
  p: p,
  picture: picture,
  pre: pre,
  progress: progress,
  q: q,
  rp: rp,
  rt: rt,
  ruby: ruby,
  s: s,
  samp: samp,
  script: script,
  search: search,
  section: section,
  select: select,
  slot: slot,
  small: small,
  source: source,
  span: span,
  strong: strong,
  style: style,
  sub: sub,
  summary: summary,
  sup: sup,
  svg: svg,
  table: table,
  tbody: tbody,
  td: td,
  template: template,
  textarea: textarea,
  tfoot: tfoot,
  th: th,
  thead: thead,
  time: time,
  title: title,
  tr: tr,
  track: track,
  u: u,
  ul: ul,
  video: video,
  wbr: wbr,
}

export const textNodeFn = text

export const elementRenderProps = {
  children: (p: Children) => p,
  ref: (p: RefObject<HTMLElement>) => p,
}
